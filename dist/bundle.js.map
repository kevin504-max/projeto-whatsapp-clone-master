{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9BO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;;;;;;;;;ACjC2C;AACY;AACkB;AACzE;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,gEAAmB;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,+BAA+B,kEAAgB;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,sDAAsD,oFAAyB;AAC/E;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,sDAAsD,0DAAa;AACnE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC3WO;AACP;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM,GAAG,oCAAoC,GAAG,oCAAoC;AAC1G,UAAU;AACV,sBAAsB,QAAQ,GAAG,oCAAoC;AACrE;AACA;AACA;;;;;;UCnBA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsE;AACtE;AACA,iBAAiB,iFAAkB,G","sources":["webpack://curso-javascript-projeto-whatsapp-clone-master/./src/controller/CameraController.js","webpack://curso-javascript-projeto-whatsapp-clone-master/./src/controller/DocumentPreviewController.js","webpack://curso-javascript-projeto-whatsapp-clone-master/./src/controller/WhatsappController.js","webpack://curso-javascript-projeto-whatsapp-clone-master/./src/util/Format.js","webpack://curso-javascript-projeto-whatsapp-clone-master/webpack/bootstrap","webpack://curso-javascript-projeto-whatsapp-clone-master/webpack/runtime/define property getters","webpack://curso-javascript-projeto-whatsapp-clone-master/webpack/runtime/hasOwnProperty shorthand","webpack://curso-javascript-projeto-whatsapp-clone-master/webpack/runtime/make namespace object","webpack://curso-javascript-projeto-whatsapp-clone-master/./src/app.js"],"sourcesContent":["export class CameraController {\r\n    constructor(videoEl) {\r\n        this._videoEl = videoEl;\r\n        navigator.mediaDevices.getUserMedia({\r\n            video: true\r\n        }).then(stream => {\r\n            this._stream = stream;\r\n            this._videoEl.srcObject = stream;\r\n            this._videoEl.play();\r\n        }).catch(th => {\r\n            console.error(th);\r\n        });\r\n    }\r\n\r\n    stop() {\r\n        this._stream.getTracks().forEach(track => {\r\n            track.stop();\r\n        });\r\n    }\r\n\r\n    takePicture(mineType = 'image/png') {\r\n        let canvas = document.createElement('canvas');~\r\n        canvas.setAttribute('height', this._videoEl.videoHeight);\r\n        canvas.setAttribute('width', this._videoEl.videoWidth);\r\n\r\n        let context = canvas.getContext('2d');\r\n        context.drawImage(this._videoEl, 0, 0, canvas.width, canvas.height);\r\n\r\n        return canvas.toDataURL(mineType);\r\n    }\r\n}","export class DocumentPreviewController {\r\n    constructor (file) {\r\n        this._file = file;\r\n    }\r\n\r\n    getPreviewData() {\r\n        return new Promise((s, f) => {\r\n            switch(this._file.type) {\r\n                case 'image/png':\r\n                case 'image/jpeg':\r\n                case 'image/jpg':\r\n                case 'image/gif':\r\n                let reader = new FileReader();\r\n                reader.onload = e => {\r\n                    s({\r\n                        src: reader.result,\r\n                        info: this._file.name\r\n                    });\r\n                }\r\n                reader.onerror = e => {\r\n                    f(e);\r\n                }\r\n                reader.readAsDataURL(this._file);\r\n                break;\r\n\r\n                case 'application/pdf':\r\n                break;\r\n\r\n                default: \r\n                    f();\r\n            }\r\n        });\r\n    }\r\n}","import {Format} from './../util/Format.js';\r\nimport {CameraController} from './CameraController.js';  \r\nimport {DocumentPreviewController} from './DocumentPreviewController.js';  \r\n\r\nexport class WhatsappController {\r\n    constructor() {\r\n        console.log('WhatsappController OK');\r\n        \r\n        this.elementsProtoType();\r\n        this.loadElements();\r\n        this.initEvents();\r\n    }\r\n\r\n    loadElements() {\r\n        this.el = {};\r\n\r\n        document.querySelectorAll('[id]').forEach(element => {\r\n            this.el[Format.getCamelCase(element.id)] = element;\r\n        })\r\n    }\r\n\r\n    elementsProtoType() {\r\n        Element.prototype.hide = function() {\r\n            this.style.display = 'none';\r\n            return this;\r\n        }\r\n\r\n        Element.prototype.show = function() {\r\n            this.style.display = 'block';\r\n            return this;\r\n        }\r\n\r\n        Element.prototype.toggle = function() {\r\n            this.style.display = (this.style.display == 'none') ? 'block' : 'none';\r\n            return this;\r\n        } \r\n\r\n        Element.prototype.on = function(events, fn) {\r\n            events.split(' ').forEach(event => {\r\n                this.addEventListener(event, fn);\r\n            });\r\n            return this;\r\n        } \r\n        \r\n        Element.prototype.css = function(styles) {\r\n            for(let name in styles) {\r\n                this.style[name] = styles[name];\r\n            }\r\n            return this;\r\n        }\r\n        \r\n        Element.prototype.addClass = function(name) {\r\n            this.classList.add(name);\r\n            return this;\r\n        }\r\n\r\n        Element.prototype.removeClass = function(name) {\r\n            this.classList.remove(name);\r\n            return this;\r\n        }\r\n\r\n        Element.prototype.toggleClass = function(name) {\r\n            this.classList.toggle(name);\r\n            return this;\r\n        }\r\n\r\n        Element.prototype.hasClass = function(name) {\r\n            return this.classList.contains(name);\r\n        }\r\n    }\r\n\r\n    initEvents() {\r\n        this.el.myPhoto.on('click', e => {\r\n            this.closeAllLeftPanel();\r\n            this.el.panelEditProfile.show();\r\n            setTimeout(() => {\r\n                this.el.panelEditProfile.addClass('open');\r\n            }, 300);\r\n        });\r\n\r\n        this.el.btnNewContact.on('click', e => {\r\n            this.closeAllLeftPanel();\r\n            this.el.panelAddContact.show();\r\n            setTimeout(() => {\r\n                this.el.panelAddContact.addClass('open');\r\n            }, 300);\r\n        });\r\n\r\n        this.el.btnClosePanelEditProfile.on('click', e => {\r\n            this.el.panelEditProfile.removeClass('open');\r\n        });\r\n\r\n        this.el.btnClosePanelAddContact.on('click', e => {\r\n            this.el.panelAddContact.removeClass('open');\r\n        });\r\n\r\n        this.el.photoContainerEditProfile.on('click', e => {\r\n            this.el.inputProfilePhoto.click();\r\n        });\r\n        \r\n        this.el.inputNamePanelEditProfile.on('keypress', e => {\r\n            if(e.key === 'Enter') {\r\n                e.preventDefault();\r\n                this.el.btnSavePanelEditProfile.click();\r\n            }\r\n        });\r\n\r\n        this.el.btnSavePanelEditProfile.on('click', e => {\r\n            console.log(this.el.inputNamePanelEditProfile.innerHTML);\r\n        });\r\n\r\n        this.el.formPanelAddContact.on('submit', e => {\r\n            e.preventDefault();\r\n            let formData = new FormData(this.el.formPanelAddContact);\r\n        });\r\n\r\n        HTMLFormElement.prototype.getForm = function() {\r\n            return new FormData(this);\r\n        }\r\n\r\n        HTMLFormElement.prototype.toJSON = function() {\r\n            let json = {};\r\n            this.getForm().forEach((value, key) => {\r\n                json[key] = value;\r\n            });\r\n\r\n            return json;\r\n        }\r\n\r\n        this.el.contactsMessagesList.querySelectorAll('.contact-item').forEach(item => {\r\n            item.on('click', e => {\r\n                this.el.home.hide();\r\n                this.el.main.css({\r\n                    display: 'flex'\r\n                });\r\n            })\r\n        });\r\n\r\n        this.el.btnAttach.on('click', e => {\r\n            e.stopPropagation();\r\n            this.el.menuAttach.addClass('open');\r\n            document.addEventListener('click', this.closeMenuAttach.bind(this));\r\n        });\r\n\r\n        this.el.btnAttachPhoto.on('click', e => {\r\n            this.el.inputPhoto.click();\r\n        });\r\n\r\n        this.el.inputPhoto.on('change', e => {\r\n            console.log(this.el.inputPhoto.files);\r\n            [...this.el.inputPhoto.files].forEach(file => {\r\n                console.log(file);\r\n            });\r\n        })\r\n\r\n        this.el.btnAttachCamera.on('click', e => {\r\n            this.closeAllMainPanel();\r\n            this.el.panelCamera.addClass('open');\r\n            this.el.panelCamera.css({\r\n                'height': 'calc(100% - 120px'\r\n            });\r\n\r\n            this._camera = new CameraController(this.el.videoCamera)\r\n        });\r\n\r\n        this.el.btnClosePanelCamera.on('click', e => {\r\n\r\n            this.closeAllMainPanel();\r\n            this.el.panelMessagesContainer.show();\r\n            this._camera.stop();\r\n        });\r\n\r\n        this.el.btnTakePicture.on('click', e => {\r\n            let dataUrl = this._camera.takePicture();\r\n            \r\n            this.el.pictureCamera.src = dataUrl;\r\n            this.el.pictureCamera.show();\r\n            this.el.videoCamera.hide();\r\n            this.el.btnReshootPanelCamera.show();\r\n            this.el.containerTakePicture.hide();\r\n            this.el.containerSendPicture.show();\r\n        });\r\n\r\n        this.el.btnReshootPanelCamera.on('click', e => {\r\n            this.el.pictureCamera.hide();\r\n            this.el.videoCamera.show();\r\n            this.el.btnReshootPanelCamera.hide();\r\n            this.el.containerTakePicture.show();\r\n            this.el.containerSendPicture.hide();\r\n        });\r\n\r\n        this.el.btnSendPicture.on('click', e => {\r\n            console.log(this.el.pictureCamera.src);\r\n        });\r\n\r\n        this.el.btnAttachDocument.on('click', e => {\r\n            this.closeAllMainPanel();\r\n            this.el.panelDocumentPreview.addClass('open');\r\n            this.el.panelDocumentPreview.css({\r\n                'height': 'calc(100% - 120px)'\r\n            });\r\n            this.el.inputDocument.click();\r\n        });\r\n\r\n        this.el.inputDocument.on('change', e => {\r\n            if(this.el.inputDocument.files.length) {\r\n                let file = this.el.inputDocument.files[0];\r\n                this._documentPreviewController = new DocumentPreviewController(file);\r\n                this._documentPreviewController.getPreviewData().then(result => {\r\n                    this.el.imgPanelDocumentPreview.src = result.src;\r\n                    this.el.infoPanelDocumentPreview.innerHTML = result.info;\r\n                    this.el.imagePanelDocumentPreview.show();\r\n                    this.el.filePanelDocumentPreview.hide();\r\n                }).catch(th => {\r\n                    switch(file.type) {\r\n                        case 'application/vnd.ms-excel':\r\n                        case 'application/vnd.openxmlformats-officedocument.spreadsheetml.seet':\r\n                            this.el.iconPanelDocumentPreview.className = 'jcxhw icon-doc-xls';\r\n                            break;\r\n\r\n                        case 'application/vnd.ms-powerpoint':\r\n                        case 'application/vnd.openxmlformats-officedocument.presentationml.presentation':\r\n                            this.el.iconPanelDocumentPreview.className = 'jcxhw icon-doc-ppt';\r\n                            break;\r\n\r\n                        case 'application/msword':\r\n                        case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\r\n                            this.el.iconPanelDocumentPreview.className = 'jcxhw icon-doc-doc';\r\n                            break;\r\n\r\n                        default:\r\n                            this.el.iconPanelDocumentPreview.className = 'jcxhw icon-doc-generic';\r\n                            break;\r\n                    }\r\n                    this.el.filenamePanelDocumentPreview.innerHTML = file.name;\r\n                    this.el.imagePanelDocumentPreview.hide();\r\n                    this.el.filePanelDocumentPreview.show();\r\n                });\r\n            }   \r\n\r\n        })\r\n\r\n        this.el.btnClosePanelDocumentPreview.on('click', e => {\r\n            this.closeAllMainPanel();\r\n            this.el.panelMessagesContainer.show();\r\n        });\r\n\r\n        this.el.btnSendDocument.on('click', e => {\r\n            console.log('sending document');\r\n        });\r\n\r\n        this.el.btnAttachContact.on('click', e => {\r\n            this.el.modalContacts.show();\r\n        });\r\n\r\n        this.el.btnCloseModalContacts.on('click', e => {\r\n            this.el.modalContacts.hide();\r\n        });\r\n\r\n        this.el.btnSendMicrophone.on('click', e => {\r\n            this.el.recordMicrophone.show();\r\n            this.el.btnSendMicrophone.hide();\r\n            this.startRecordMicrophoneTime();\r\n        });\r\n\r\n        this.el.btnCancelMicrophone.on('click', e => {\r\n            this.closeRecordMicrophone();\r\n        });\r\n\r\n        this.el.btnFinishMicrophone.on('click', e => {\r\n            this.closeRecordMicrophone();\r\n        });\r\n\r\n        this.el.inputText.on('keypress', e => {\r\n            if(e.key === 'Enter' && !e.ctrlKey) {\r\n                e.preventDefault();\r\n                this.el.btnSend.click();    \r\n            }\r\n        })\r\n\r\n        this.el.inputText.on('keyup', e => {\r\n            if(this.el.inputText.innerHTML.length) {\r\n                this.el.inputPlaceholder.hide();\r\n                this.el.btnSendMicrophone.hide();\r\n                this.el.btnSend.show();\r\n            } else {\r\n                this.el.inputPlaceholder.show();\r\n                this.el.btnSendMicrophone.show();\r\n                this.el.btnSend.hide();\r\n            }\r\n        });\r\n\r\n        this.el.btnSend.on('click', e => {\r\n            console.log(this.el.inputText.innerHTML);\r\n        });\r\n\r\n        this.el.btnEmojis.on('click', e => {\r\n            this.el.panelEmojis.toggleClass('open');\r\n\r\n        });\r\n\r\n        this.el.panelEmojis.querySelectorAll('.emojik').forEach(emoji => {\r\n            emoji.on('click', e => {\r\n                console.log(emoji.dataset.unicode);\r\n                let img = this.el.imgEmojiDefault.cloneNode();\r\n                img.style.cssText = emoji.style.cssText;\r\n                img.dataSet = emoji.dataset;\r\n                img.alt = emoji.dataset.unicode;\r\n\r\n                emoji.classList.forEach(name => {\r\n                    img.classList.add(name);\r\n                });\r\n\r\n                this.el.inputText.appendChild(img);\r\n                let cursor = window.getSelection();\r\n\r\n                if(!(cursor.focusNode.id == 'input-text') || !cursor.focusNode) {\r\n                    this.el.inputText.focus();\r\n                    cursor = window.getSelection();\r\n                }\r\n\r\n                let range = document.createRange();\r\n                range = cursor.getRangeAt(0);\r\n                range.deleteContents();\r\n\r\n                let frag = document.createDocumentFragment();\r\n                frag.appendChild(img);\r\n                range.insertNode(frag);\r\n                range.setStartAfter(img);\r\n\r\n                this.el.inputText.dispatchEvent(new Event('keyup'));\r\n            });\r\n        });\r\n    }\r\n\r\n    startRecordMicrophoneTime() {\r\n        let start = Date.now();\r\n        this._recordMicrophoneInterval = setInterval(() => {\r\n            this.el.recordMicrophoneTimer.innerHTML = Format.toTime(Date.now() - start);\r\n        }, 100);\r\n    }\r\n\r\n    closeRecordMicrophone() {\r\n        this.el.recordMicrophone.hide();\r\n        this.el.btnSendMicrophone.show();\r\n        clearInterval(this._recordMicrophoneInterval);\r\n    }\r\n\r\n    closeAllMainPanel() {\r\n        this.el.panelMessagesContainer.hide();\r\n        this.el.panelDocumentPreview.removeClass('open');\r\n        this.el.panelCamera.removeClass('open');\r\n    }\r\n\r\n    closeMenuAttach(e) {\r\n        document.removeEventListener('click', this.closeMenuAttach);\r\n        this.el.menuAttach.removeClass('open');\r\n    }\r\n\r\n    closeAllLeftPanel() {\r\n        this.el.panelAddContact.hide();\r\n        this.el.panelEditProfile.hide();\r\n    }\r\n}","export class Format {\r\n    static getCamelCase(text) {\r\n        let div = document.createElement('div');\r\n        div.innerHTML = `<div data-${text}=\"id\"></div>`;\r\n\r\n        return Object.keys(div.firstChild.dataset)[0];\r\n    }\r\n\r\n    static toTime(duration) {\r\n        let seconds = parseInt((duration / 1000) % 60);\r\n        let minutes = parseInt((duration / (1000 * 60)) % 60);\r\n        let hours = parseInt((duration / (1000 * 60 * 60) %24));\r\n        \r\n        if(hours > 0) {\r\n            return `${hours}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n        } else {\r\n            return `${minutes}:${seconds.toString().padStart(2, '0')}`\r\n        }\r\n    }\r\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {WhatsappController} from './controller/WhatsappController.js';\r\n\r\nwindow.app = new WhatsappController();"],"names":[],"sourceRoot":""}